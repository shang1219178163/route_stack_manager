# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 2️⃣ 安装 Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'  # 可换成你的版本
          channel: 'stable'

      # 3️⃣ 检查版本（验证修复是否生效）
      - name: Verify Flutter & Dart
        run: |
          which flutter
          which dart
          flutter --version
          dart --version

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
#      - name: Analyze project source
#        run: dart analyze

      - name: Dry run publish
        run: flutter pub publish --dry-run

      # 发布插件
      - name: Publish package to pub.dev
        uses: k-paxian/dart-package-publisher@v1.5.1
        with:
          credentialJson: ${{ secrets.CREDENTIAL_JSON }}
          flutter: true
          skipTests: false
          dryRunOnly: true
